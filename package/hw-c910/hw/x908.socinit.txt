#Set gdb environment
set height 0
# Don't confirm when quit
set confirm off

reset
shell $(sleep 2)
set remotetimeout 20
# 0x00000000 ~ 0x2 00000000 DDR, NAPOT rwx
set $pmpaddr0 = 0x0 >> 2 | ((0x200000000 - 1) >> 3)

# 0xff d8000000 ~ 0xff d8000000 plic, NAPOT rw
set $pmpaddr1 = 0xffd8000000 >> 2 | ((0x8000000 - 1) >> 3)

# 0xff e0000000 ~ 0x100 00000000 peripherals, NAPOT rw
set $pmpaddr2 = 0xffe0000000 >> 2 | ((0x20000000 - 1) >> 3)

# 0x00000000 ~ 0x10000000 NAPOT no access
set $pmpaddr6 = 0x00000000 >> 2 | ((0x10000000 - 1) >> 3)

# 0x10000000 ~ 0x100 00000000 TOR no access
set $pmpaddr7 = 0xffffffffff >> 2

# Be care! we must put background deny entries in the end of
# pmpaddrx with lowest priority and set lock bit for m state deny.
# Access needn't lock bit for the m state.
set $pmpcfg0 = 0x88988080809b9b9f

##modify the clk div ratio of axi clk
#set *0xffef010100 = 0x3f0
#set *0xffef010100 = 0xbf0

#release cpu_rst_b of cluster1
set *0xffef014004 = 0x3003

#0x3:enable snoop to cluster0 and cluster1,0x0:close all
set *0xffff980040 = 0x3
#0x3:enable DVM req to cluster0 and cluster1,  0x0:disable
set *0xffff9ff040 = 0x3

#Debug enable
set *0xffef0140e8 = 0x1ffff
set *0xffef0140ec = 0x1ffff

# Set DDR_CFG0 to enable DDR
set *0xffff005000 = (0x1ff << 4)

#default，iopmp will deny dma transaction
#enable gmac0 iopmp
set *(0xfffc001000+0x280) = 0x0 >> 12
set *(0xfffc001000+0x284) = 0x200000000 >> 12
set *(0xfffc001000+0x80) = 0x3

#enable dma iopmp
set *(0xffffc20000+0x280) = 0x0 >> 12
set *(0xffffc20000+0x284) = 0x200000000 >> 12
set *(0xffffc20000+0x80) = 0x3

#mmcm reset
set *0xffec003008 = (0x1 << 13)
set *0xffec003004 = (0x1 << 13)

set $DCP_ENABLED = 0
if ($DCP_ENABLED == 1)
	#printf "如果要使用dcp功能，请在rootfs启动后，ifconfig前，使用SBA功能设置以下三个寄存器\n"
	#gmac mux 0: soc bus ; 1:cpu acp bus
	#set *0xffef0180d0 = (1 << 16)
	#set $GMAC_BADDR = 0xffe7070000
	#set *($GMAC_BADDR + 0x1000) = (1<<16) | (8<<8)
	#set *($GMAC_BADDR + 0x1028) = (0x2 << 1)
else 
	printf "DCP_DISABLLED\n"
end

shell $(sleep 3)
